<% @title = "Create new address" %>

<h1><%= @title %></h1>

<div style="max-width: 500px;">
<%= form_with model: @address do |form| %>
    <div>
      <%= form.label :alias, "Alias:" %><br>
      <%= form.text_field :alias %>
      <% @address.errors.full_messages_for(:alias).each do |message| %>
        <div><%= message %></div>
      <% end %>
    </div>

    <!-- Hidden inputs correspond to the model field names to demonstrate a POST to the server -->
    <input type="hidden" name="address[stracTokens]" id="address_stracTokens">
    <input type="hidden" name="address[line1]" id="address_line1">
    <input type="hidden" name="address[line2]" id="address_line2">
    <input type="hidden" name="address[city]" id="address_city">
    <input type="hidden" name="address[state]" id="address_state">
    <input type="hidden" name="address[zipCode]" id="address_zipCode">

    <div id="strac-widget" style="height:166px;"></div>

    <div id="error-message" style="display: none; margin-bottom: 5px;">Please fill out required fields</div>

    <div>
      <input type="submit" id="strac-submit" name="commit" value="Create" data-disable-with="Create">
    </div>
<% end %>
</div>

<div style="margin-top: 100px;">
  <a id="show-boundary">Toggle Strac widget boundary</a>
</div>

<script type="text/javascript">
    $(document).ready(async () => {
        // Public API key not used for authorization; we can create tokens but need an authentication service
        // when viewing the data.
        const createTokenApiKey = "pk_test_VJjfhYqRcFawG0JNZrYbD6umzY3Hpt8CaZYVDWLO";

        const BorderRadius = '5px';
        const WidgetStyles = {
            'body': {
                'font-family': 'Verdana, sans-serif',
                'color': '#b7b4c7',
                'background-color': '#1d1a27',
                'padding': '1px' // Approximately prevent overflow of input boundary during selection
            },
            'input[type=text]': {
                'background-color': '#302c3f',
                'border-radius': '5px',
                'box-sizing': 'border-box',
                'line-height': '1',
                'margin-bottom': '5px',
                'width': '100%',
                'color': '#b7b4c7',
            },
            'select': {
                'background-color': '#302c3f',

                'border-radius': '5px',
                'box-sizing': 'border-box',
                'line-height': '1',
                'margin-bottom': '5px',
                'width': '100%',
                'color': '#b7b4c7', // For placeholder
            },
            '.strac-input-valid': {
                'border': '1px solid #b7b4c7',
            },
            '.strac-input-invalid': {
                'border-radius': BorderRadius,
                'border': '1px solid #ff4895'
            },
            '.strac-form-label-medium': {
                'color': '#b7b4c7',
                'font-weight': '900'
            },
            '.strac-select-option': {
                'color': '#b7b4c7'
            }
        };

        const StateNames = [
            "Alabama",
            "Alaska",
            "Arizona",
            "Arkansas",
            "California",
            "Colorado",
            "Connecticut",
            "Delaware",
            "Florida",
            "Georgia",
            "Hawaii",
            "Idaho",
            "Illinois",
            "Indiana",
            "Iowa",
            "Kansas",
            "Kentucky",
            "Louisiana",
            "Maine",
            "Maryland",
            "Massachusetts",
            "Michigan",
            "Minnesota",
            "Mississippi",
            "Missouri",
            "Montana",
            "Nebraska",
            "Nevada",
            "New Hampshire",
            "New Jersey",
            "New Mexico",
            "New York",
            "North Carolina",
            "North Dakota",
            "Ohio",
            "Oklahoma",
            "Oregon",
            "Pennsylvania",
            "Rhode Island",
            "South Carolina",
            "South Dakota",
            "Tennessee",
            "Texas",
            "Utah",
            "Vermont",
            "Virginia",
            "Washington",
            "West Virginia",
            "Wisconsin",
            "Wyoming",
        ];

        const StateChoices = StateNames.map((s) => {
            return { value: s, text: s };
        });

        let urlParams = new URLSearchParams(window.location.search);
        let shouldTokenize = urlParams.get('tokenize') === 'true';

        const fieldDefinition = [
            [
                {
                    'elementType': 'label',
                    'text': 'Line 1:',
                    'gridUnits': 12
                },
            ], [
                {
                    'elementType': 'text',
                    'type' : 'address_line_1',
                    'name': 'line1',
                    'required': true,
                    'gridUnits': 12,
                    'tokenize': shouldTokenize,
                },
            ], [
                {
                    'elementType': 'label',
                    'text': 'Line 2 (optional):',
                    'gridUnits': 12
                },
            ], [
                {
                    'elementType': 'text',
                    'type' : 'address_line_2',
                    'name': 'line2',
                    'required': false,
                    'gridUnits': 12,
                    'tokenize': shouldTokenize,
                },
            ], [
                {
                    'elementType': 'label',
                    'text': 'City:',
                    'gridUnits': 4
                }, {
                    'elementType': 'label',
                    'text': 'State:',
                    'gridUnits': 4
                }, {
                    'elementType': 'label',
                    'text': 'Zip code:',
                    'gridUnits': 4
                },
            ], [
                {
                    'elementType': 'text',
                    'type' : 'address_city',
                    'name': 'city',
                    'required': true,
                    'gridUnits': 4,
                    'tokenize': shouldTokenize,
                }, {
                    'elementType': 'choice',
                    'choices': StateChoices,
                    'type' : 'address_state',
                    'name': 'state',
                    'placeholder': 'Choose state',
                    'required': true,
                    'gridUnits': 4,
                    'tokenize': shouldTokenize,
                }, {
                    'elementType': 'text',
                    'type' : 'address_zip_code',
                    'name': 'zipCode',
                    'required': true,
                    'gridUnits': 4,
                    'tokenize': shouldTokenize,
                },
            ],
        ];

        const widgetOptions = {
            fields: fieldDefinition,
            styles: WidgetStyles
        };

        const widget = new StracWidget(createTokenApiKey, widgetOptions).injectTokenizeViewer(
            'strac-widget'
        ).on(window.StracWidget.events.EVENT_DIMENSION_CHANGED, (invoker, event) => {
            if (event.height) {
                // Account for some padding in the body
                 $("#strac-widget").height(event.height + 10);
            }
        });

        $("#strac-submit").on('click', async function (e) {
            e.preventDefault();

            // TODO: also check alias is valid

            const isFormValid = await widget.isFormValid();

            if (isFormValid) {
                $("#error-message").hide();
                $("#submit").hide();

                const namesToTokenizedValues = await widget.getTokenizedValues();

                if (shouldTokenize) {
                    $("#address_stracTokens").val(JSON.stringify(namesToTokenizedValues));
                }
                else {
                    for (const name in namesToTokenizedValues) {
                        $(`#address_${name}`).val(namesToTokenizedValues[name]);
                    }
                }

                $("form").submit();
            }
            else {
                $("#error-message").show();
            }
        });

        $("#show-boundary").on('click', function (e) {
            $("#strac-widget").toggleClass('shows-boundary')
        });
    });
</script>
